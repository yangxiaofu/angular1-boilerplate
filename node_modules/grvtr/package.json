{
  "_args": [
    [
      "grvtr@0.1.3",
      "/Users/fudaviddong/Desktop/ng-bconnect"
    ]
  ],
  "_from": "grvtr@0.1.3",
  "_id": "grvtr@0.1.3",
  "_inCache": true,
  "_installable": true,
  "_location": "/grvtr",
  "_npmUser": {
    "email": "dmitri.voronianski@gmail.com",
    "name": "dmitri"
  },
  "_npmVersion": "1.2.23",
  "_phantomChildren": {},
  "_requested": {
    "name": "grvtr",
    "raw": "grvtr@0.1.3",
    "rawSpec": "0.1.3",
    "scope": null,
    "spec": "0.1.3",
    "type": "version"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/grvtr/-/grvtr-0.1.3.tgz",
  "_shasum": "64eeec04694fa9cb41384b6762b02afa6f121323",
  "_shrinkwrap": null,
  "_spec": "grvtr@0.1.3",
  "_where": "/Users/fudaviddong/Desktop/ng-bconnect",
  "author": {
    "email": "dmitri.voronianski@gmail.com",
    "name": "Dmitri Voronianski"
  },
  "bugs": {
    "url": "https://github.com/voronianski/node-grvtr.js/issues"
  },
  "dependencies": {
    "blueimp-md5": "~1.0.0"
  },
  "description": "small gravatar node.js library",
  "devDependencies": {
    "grunt": "0.4.0",
    "grunt-contrib-jshint": "~0.3.0",
    "grunt-jasmine-node": "0.0.6"
  },
  "directories": {
    "test": "test"
  },
  "dist": {
    "shasum": "64eeec04694fa9cb41384b6762b02afa6f121323",
    "tarball": "https://registry.npmjs.org/grvtr/-/grvtr-0.1.3.tgz"
  },
  "engines": {
    "node": ">=0.8.x"
  },
  "gitHead": "52235b796649293dd52804e02870ad73ab63802c",
  "homepage": "https://github.com/voronianski/node-grvtr",
  "keywords": [
    "avatar",
    "generate",
    "gravatar",
    "url"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "dmitri",
      "email": "dmitri.voronianski@gmail.com"
    }
  ],
  "name": "grvtr",
  "optionalDependencies": {},
  "readme": "# node-grvtr\n\n[![NPM](https://nodei.co/npm/grvtr.png?downloads=true)](https://nodei.co/npm/grvtr/)\n\nSmall node.js library that generates gravatar url based on an email.\n\n## How to use\n\nAt first you need to install npm package:\n\n```bash\nnpm install grvtr\n```\n\nThen you can require it in your project and pass an email string to the utility:\n\n```javascript\nvar grvtr = require('grvtr');\n\ngrvtr.create('john.doe@example.com'); // returns http://gravatar.com/avatar/[HASH]\n```\n\nGravatar allows you to use several options \n\n```javascript\ngrvtr.create('john.doe@example.com', { \n\tsize: 200,     // 1- 2048px\n\tdefaultImage: 'mm', // 'identicon', 'monsterid', 'wavatar', 'retro', 'blank' \n\trating: 'g',   // 'pg', 'r', 'x'\n\tsecure: true,\n\tforceDefault: true\n});\n// returns http://gravatar.com/avatar/[HASH]?params\n```\n\nAlso you can pass a callback to ``create`` method (do not forget to add empty object as second parameter if no options required):\n\n```javascript\ngrvtr.create('john.doe@example.com', {}, function (gravatarUrl) {\n\tconsole.log(gravatarUrl); // or do something with the src 'http://gravatar.com/avatar/[HASH]'\n});\n```\n## Options according to [gravatar.com](http://gravatar.com) documentation:\n\n### Size\n\nYou may request images anywhere from **1px up to 2048px**, however requesting larger sizes may result in pixelation/low-quality images.\n\n### Default\n\nPossible values of default image:\n\n- **404**: do not load any image if none is associated with the email hash, instead return an HTTP 404 (File Not Found) response\n\n- **mm**: (mystery-man) a simple, cartoon-style silhouetted outline of a person (does not vary by email hash)\n\n- **identicon**: a geometric pattern based on an email hash\n\n- **monsterid**: a generated 'monster' with different colors, faces, etc\n\n- **wavatar**: generated faces with differing features and backgrounds\n\n- **retro**: awesome generated, 8-bit arcade-style pixelated faces\n\n- **blank**: a transparent PNG image\n\n![404](http://www.gravatar.com/avatar/00000000000000000000000000000000?d=mm&f=y)\n![mm](http://www.gravatar.com/avatar/00000000000000000000000000000000?d=identicon&f=y)\n![identicon](http://www.gravatar.com/avatar/00000000000000000000000000000000?d=monsterid&f=y)\n![monsterid](http://www.gravatar.com/avatar/00000000000000000000000000000000?d=wavatar&f=y)\n![retro](http://www.gravatar.com/avatar/00000000000000000000000000000000?d=retro&f=y)\n\n### Rating\n\nYou can self-rate images indicating if an image is appropriate for a certain audience:\n\n- **g**: suitable for display on all websites with any audience type\n- **pg**: may contain rude gestures, provocatively dressed individuals, the lesser swear words, or mild violence\n- **r**: may contain such things as harsh profanity, intense violence, nudity, or hard drug use\n- **x**: may contain hardcore sexual imagery or extremely disturbing violence\n\n### Forcedefault\n\nUse if you want to force the default image to always load set this property to ``true``.\n\n### Secure\n\nIf you're displaying Gravatars on a page that is being served over SSL you can server gravatars via SSL as well while setting this one to ``true``.\n\n## Building and testing\n\nInstall the application,\n\n```bash\nnpm install\n```\n\nMake sure, you have latest ``grunt`` installed,\n\n```bash\nnpm install -g grunt-cli\n```\n\nRun build,\n\n```bash\ngrunt\n```\n\nTo just run ``jshint``,\n\n```bash\ngrunt jshint\n```\n\n## Contributing\n\nIf you have some ideas or found a bug feel free to raise an [issue](https://github.com/voronianski/node-grvtr/issues).\n\n* * *\n\n##### MIT Licensed\n\n(c) 2013 Dmitri Voronianski\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/voronianski/node-grvtr.git"
  },
  "scripts": {
    "test": "node_modules/.bin/jasmine-node --verbose --color test"
  },
  "version": "0.1.3"
}
